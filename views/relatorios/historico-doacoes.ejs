<div class="container">
    <h1 class="text-secondary mb-4">Relatório - Histórico de Doações</h1>
    
    <!-- Formulário de Filtros -->
    <div class="card mb-4">
        <div class="card-header">
            <h5 class="mb-0">
                <i class="fas fa-filter"></i> Filtros de Pesquisa
            </h5>
        </div>
        <div class="card-body">
            <form method="GET" action="/relatorios/doacoes" id="formFiltros">
                <div class="row">
                    <div class="col-md-4">
                        <label for="dataInicio" class="form-label">Data de Início:</label>
                        <input type="date" class="form-control" id="dataInicio" name="dataInicio" 
                               value="<%= (typeof filtros !== 'undefined' && filtros && filtros.dataInicio) ? filtros.dataInicio : '' %>">
                    </div>
                    <div class="col-md-4">
                        <label for="dataFim" class="form-label">Data de Fim:</label>
                        <input type="date" class="form-control" id="dataFim" name="dataFim" 
                               value="<%= (typeof filtros !== 'undefined' && filtros && filtros.dataFim) ? filtros.dataFim : '' %>">
                    </div>
                    <div class="col-md-4 d-flex align-items-end">
                        <button type="submit" class="btn btn-primary me-2">
                            <i class="fas fa-search"></i> Filtrar
                        </button>
                        <a href="/relatorios/doacoes" class="btn btn-secondary">
                            <i class="fas fa-times"></i> Limpar
                        </a>
                    </div>
                </div>
            </form>
        </div>
    </div>
    
    <% if (typeof erro !== 'undefined' && erro) { %>
        <div class="alert alert-danger">
            <%= erro %>
        </div>
    <% } else { %>
        <!-- Resumo das Doações -->
        <div class="row mb-4">
            <div class="col-md-4">
                <div class="card">
                    <div class="card-body text-center">
                        <h5 class="card-title">Total de Doações</h5>
                        <h2 class="text-primary"><%= totalDoacoes %></h2>
                    </div>
                </div>
            </div>
            <div class="col-md-4">
                <div class="card">
                    <div class="card-body text-center">
                        <h5 class="card-title">Valor Total Arrecadado</h5>
                        <h2 class="text-success">R$ <%= valorTotal.toFixed(2) %></h2>
                    </div>
                </div>
            </div>
            <div class="col-md-4">
                <div class="card">
                    <div class="card-body text-center">
                        <h5 class="card-title">Ticket Médio</h5>
                        <h2 class="text-info">R$ <%= totalDoacoes > 0 ? (valorTotal / totalDoacoes).toFixed(2) : '0.00' %></h2>
                    </div>
                </div>
            </div>
        </div>
        
        <!-- Botões de Ação -->
        <div class="mb-3">
            <button class="btn btn-primary" onclick="imprimirRelatorio()">
                <i class="fas fa-print"></i> Imprimir Relatório
            </button>
            <button class="btn btn-success" onclick="exportarCsv()">
                <i class="fas fa-file-csv"></i> Exportar CSV
            </button>
            <button class="d-none btn btn-info" id="btnExportarExcel">
                <i class="fas fa-file-excel"></i> Exportar Excel
            </button>
        </div>
        
        <!-- Informações do Filtro Aplicado -->
        <% if (typeof filtros !== 'undefined' && filtros && (filtros.dataInicio || filtros.dataFim)) { %>
            <div class="alert alert-info">
                <i class="fas fa-info-circle"></i> 
                <strong>Filtros aplicados:</strong>
                <% if (filtros.dataInicio && filtros.dataFim) { %>
                    Período de <%= new Date(filtros.dataInicio).toLocaleDateString('pt-BR') %> 
                    até <%= new Date(filtros.dataFim).toLocaleDateString('pt-BR') %>
                <% } else if (filtros.dataInicio) { %>
                    A partir de <%= new Date(filtros.dataInicio).toLocaleDateString('pt-BR') %>
                <% } else if (filtros.dataFim) { %>
                    Até <%= new Date(filtros.dataFim).toLocaleDateString('pt-BR') %>
                <% } %>
            </div>
        <% } %>
        
        <!-- Tabela de Doações -->
        <div class="table-responsive">
            <table class="table table-striped table-bordered" id="tabelaDoacoes">
                <thead class="table-dark">
                    <tr>
                        <th>ID</th>
                        <th>Doador</th>
                        <th>Data</th>
                        <th>Valor (R$)</th>
                        <th>Status</th>
                        <th>Itens</th>
                        <th class="no-print">Ações</th>
                    </tr>
                </thead>
                <tbody>
                    <% if (lista && lista.length > 0) { %>
                        <% for (let i = 0; i < lista.length; i++) { %>
                            <tr>
                                <td><%= lista[i].doacaoId %></td>
                                <td><%= lista[i].doadorNome %></td>
                                <td><%= new Date(lista[i].doacaoData).toLocaleDateString('pt-BR') %></td>
                                <td>R$ <%= parseFloat(lista[i].doacaoValor || 0).toFixed(2) %></td>
                                <td>
                                    <span class="badge bg-<%= lista[i].doacaoStatus === 'Concluída' ? 'success' : 'warning' %>">
                                        <%= lista[i].doacaoStatus %>
                                    </span>
                                </td>
                                <td>
                                    <% if (lista[i].itens && lista[i].itens.length > 0) { %>
                                        <button class="btn btn-sm btn-outline-info" data-bs-toggle="modal" data-bs-target="#modalItens<%= lista[i].doacaoId %>">
                                            <i class="fas fa-list"></i> <%= lista[i].itens.length %> item(s)
                                        </button>
                                    <% } else { %>
                                        <span class="text-muted">Sem itens</span>
                                    <% } %>
                                </td>
                                <td class="no-print">
                                    <a href="/doacoes/visualizar/<%= lista[i].doacaoId %>" class="btn btn-sm btn-primary">
                                        <i class="fas fa-eye"></i>
                                    </a>
                                </td>
                            </tr>
                        <% } %>
                    <% } else { %>
                        <tr>
                            <td colspan="7" class="text-center">Nenhuma doação encontrada.</td>
                        </tr>
                    <% } %>
                </tbody>
            </table>
        </div>
    <% } %>
</div>

<!-- Modais para mostrar itens das doações -->
<% if (typeof lista !== 'undefined' && lista && lista.length > 0) { %>
    <% for (let i = 0; i < lista.length; i++) { %>
        <% if (lista[i].itens && lista[i].itens.length > 0) { %>
            <div class="modal fade" id="modalItens<%= lista[i].doacaoId %>" tabindex="-1">
                <div class="modal-dialog modal-lg">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title">Itens da Doação #<%= lista[i].doacaoId %></h5>
                            <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                        </div>
                        <div class="modal-body">
                            <table class="table table-sm">
                                <thead>
                                    <tr>
                                        <th>Produto</th>
                                        <th>Quantidade</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    <% lista[i].itens.forEach(item => { %>
                                        <tr>
                                            <td><%= item.produtoNome %></td>
                                            <td><%= item.doacaoItemQuantidade %></td>
                                        </tr>
                                    <% }); %>
                                </tbody>
                            </table>
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Fechar</button>
                        </div>
                    </div>
                </div>
            </div>
        <% } %>
    <% } %>
<% } %>

<!-- CSS personalizado -->
<style>
.card:hover {
    transform: translateY(-2px);
    transition: transform 0.2s ease-in-out;
    box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.15);
}

.table tbody tr:hover {
    background-color: rgba(0, 123, 255, 0.075);
}

.badge {
    font-size: 0.75em;
}

.btn-loading {
    position: relative;
    color: transparent;
}

.btn-loading::after {
    content: "";
    position: absolute;
    width: 16px;
    height: 16px;
    margin: auto;
    border: 2px solid transparent;
    border-top-color: #ffffff;
    border-radius: 50%;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    animation: spin 1s linear infinite;
}

@keyframes spin {
    0% { transform: rotate(0deg); }
    100% { transform: rotate(360deg); }
}

@media (max-width: 768px) {
    .card-title {
        font-size: 0.875rem;
    }
    
    .card h2 {
        font-size: 1.25rem;
    }
    
    .table-responsive {
        font-size: 0.875rem;
    }
    
    .btn-sm {
        padding: 0.125rem 0.25rem;
        font-size: 0.75rem;
    }
}
</style>

<!-- JavaScript -->
<script src="https://cdn.sheetjs.com/xlsx-0.20.2/package/dist/xlsx.full.min.js"></script>
<script>
document.addEventListener("DOMContentLoaded", function() {
    // Configurar datas máximas/mínimas
    const dataInicio = document.getElementById('dataInicio');
    const dataFim = document.getElementById('dataFim');
    
    // Configurar data máxima como hoje
    const hoje = new Date().toISOString().split('T')[0];
    dataInicio.max = hoje;
    dataFim.max = hoje;
    
    // Validar que data fim não seja menor que data início
    dataInicio.addEventListener('change', function() {
        dataFim.min = this.value;
        if (dataFim.value && dataFim.value < this.value) {
            dataFim.value = this.value;
        }
    });
    
    dataFim.addEventListener('change', function() {
        dataInicio.max = this.value;
        if (dataInicio.value && dataInicio.value > this.value) {
            dataInicio.value = this.value;
        }
    });
    
    // Exportar para Excel (se necessário)
    const btnExcel = document.getElementById("btnExportarExcel");
    if (btnExcel) {
        btnExcel.addEventListener("click", function() {
            try {
                this.classList.add('btn-loading');
                this.disabled = true;
                
                const tabela = document.getElementById("tabelaDoacoes").cloneNode(true);
                tabela.querySelectorAll("th:last-child, td:last-child").forEach(cell => cell.remove());
                
                const wb = XLSX.utils.table_to_book(tabela);
                const fileName = `relatorio-doacoes-${new Date().toISOString().split('T')[0]}.xlsx`;
                XLSX.writeFile(wb, fileName);
                
                setTimeout(() => {
                    this.classList.remove('btn-loading');
                    this.disabled = false;
                }, 1000);
            } catch (error) {
                console.error('Erro ao exportar:', error);
                alert('Erro ao exportar para Excel. Tente novamente.');
                this.classList.remove('btn-loading');
                this.disabled = false;
            }
        });
    }
});

// Função para imprimir em nova página
function imprimirRelatorio() {
    const params = new URLSearchParams(window.location.search);
    const url = '/relatorios/doacoes/imprimir?' + params.toString();
    
    const printWindow = window.open(url, '_blank', 'width=800,height=600');
    printWindow.onload = function() {
        printWindow.print();
    };
}

// Função para exportar CSV
function exportarCsv() {
    const params = new URLSearchParams(window.location.search);
    const url = '/relatorios/doacoes/csv?' + params.toString();
    
    window.location.href = url;
}

// Melhorar acessibilidade dos modais
document.querySelectorAll('[data-bs-toggle="modal"]').forEach(button => {
    button.addEventListener('click', function() {
        const modalId = this.getAttribute('data-bs-target');
        const modal = document.querySelector(modalId);
        if (modal) {
            const modalTitle = modal.querySelector('.modal-title');
            if (modalTitle) {
                setTimeout(() => {
                    modalTitle.focus();
                }, 150);
            }
        }
    });
});

// Validação do formulário
document.getElementById('formFiltros').addEventListener('submit', function(e) {
    const dataInicio = document.getElementById('dataInicio').value;
    const dataFim = document.getElementById('dataFim').value;
    
    if (dataInicio && dataFim && dataInicio > dataFim) {
        e.preventDefault();
        alert('A data de início não pode ser maior que a data de fim.');
        return false;
    }
});
</script>