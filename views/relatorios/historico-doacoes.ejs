<div class="container">
    <h1 class="text-secondary mb-4">Relatório - Histórico de Doações</h1>
    
    <% if (typeof erro !== 'undefined' && erro) { %>
        <div class="alert alert-danger">
            <%= erro %>
        </div>
    <% } else { %>
        <!-- Resumo das Doações -->
        <div class="row mb-4">
            <div class="col-md-4">
                <div class="card">
                    <div class="card-body text-center">
                        <h5 class="card-title">Total de Doações</h5>
                        <h2 class="text-primary"><%= totalDoacoes %></h2>
                    </div>
                </div>
            </div>
            <div class="col-md-4">
                <div class="card">
                    <div class="card-body text-center">
                        <h5 class="card-title">Valor Total Arrecadado</h5>
                        <h2 class="text-success">R$ <%= valorTotal.toFixed(2) %></h2>
                    </div>
                </div>
            </div>
            <div class="col-md-4">
                <div class="card">
                    <div class="card-body text-center">
                        <h5 class="card-title">Ticket Médio</h5>
                        <h2 class="text-info">R$ <%= totalDoacoes > 0 ? (valorTotal / totalDoacoes).toFixed(2) : '0.00' %></h2>
                    </div>
                </div>
            </div>
        </div>
        
        <!-- Botões de Ação -->
        <div class="mb-3 no-print">
            <button class="btn btn-primary" onclick="window.print()">
                <i class="fas fa-print"></i> Imprimir Relatório
            </button>
            <button class="d-none btn btn-success" id="btnExportarExcel">
                <i class="fas fa-file-excel"></i> Exportar para Excel
            </button>
        </div>
        
        <!-- Tabela de Doações -->
        <div class="table-responsive">
            <table class="table table-striped table-bordered" id="tabelaDoacoes">
                <thead class="table-dark">
                    <tr>
                        <th>ID</th>
                        <th>Doador</th>
                        <th>Data</th>
                        <th>Valor (R$)</th>
                        <th>Status</th>
                        <th>Itens</th>
                        <th class="no-print">Ações</th>
                    </tr>
                </thead>
                <tbody>
                    <% if (lista && lista.length > 0) { %>
                        <% for (let i = 0; i < lista.length; i++) { %>
                            <tr>
                                <td><%= lista[i].doacaoId %></td>
                                <td><%= lista[i].doadorNome %></td>
                                <td><%= new Date(lista[i].doacaoData).toLocaleDateString('pt-BR') %></td>
                                <td>R$ <%= parseFloat(lista[i].doacaoValor || 0).toFixed(2) %></td>
                                <td>
                                    <span class="badge bg-<%= lista[i].doacaoStatus === 'Concluída' ? 'success' : 'warning' %>">
                                        <%= lista[i].doacaoStatus %>
                                    </span>
                                </td>
                                <td>
                                    <% if (lista[i].itens && lista[i].itens.length > 0) { %>
                                        <button class="btn btn-sm btn-outline-info no-print" data-bs-toggle="modal" data-bs-target="#modalItens<%= lista[i].doacaoId %>">
                                            <i class="fas fa-list"></i> <%= lista[i].itens.length %> item(s)
                                        </button>
                                        <!-- Versão para impressão -->
                                        <span class="print-only"><%= lista[i].itens.length %> item(s)</span>
                                    <% } else { %>
                                        <span class="text-muted">Sem itens</span>
                                    <% } %>
                                </td>
                                <td class="no-print">
                                    <a href="/doacoes/visualizar/<%= lista[i].doacaoId %>" class="btn btn-sm btn-primary">
                                        <i class="fas fa-eye"></i>
                                    </a>
                                </td>
                            </tr>
                        <% } %>
                    <% } else { %>
                        <tr>
                            <td colspan="7" class="text-center">Nenhuma doação encontrada.</td>
                        </tr>
                    <% } %>
                </tbody>
            </table>
        </div>
    <% } %>
</div>

<!-- Modais para mostrar itens das doações -->
<% if (typeof lista !== 'undefined' && lista && lista.length > 0) { %>
    <% for (let i = 0; i < lista.length; i++) { %>
        <% if (lista[i].itens && lista[i].itens.length > 0) { %>
            <div class="modal fade" id="modalItens<%= lista[i].doacaoId %>" tabindex="-1">
                <div class="modal-dialog modal-lg">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title">Itens da Doação #<%= lista[i].doacaoId %></h5>
                            <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                        </div>
                        <div class="modal-body">
                            <table class="table table-sm">
                                <thead>
                                    <tr>
                                        <th>Produto</th>
                                        <th>Quantidade</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    <% lista[i].itens.forEach(item => { %>
                                        <tr>
                                            <td>
                                                <%= typeof item === 'object' && item.produtoNome ? item.produtoNome : 
                                                    (typeof item.toJSON === 'function' ? item.toJSON().produtoNome : 
                                                     (item.produtoNome || 'Nome não encontrado')) %>
                                            </td>
                                            <td>
                                                <%= typeof item === 'object' && item.doacaoItemQuantidade ? item.doacaoItemQuantidade : 
                                                    (typeof item.toJSON === 'function' ? item.toJSON().doacaoItemQuantidade : 
                                                     (item.doacaoItemQuantidade || 0)) %>
                                            </td>
                                        </tr>
                                    <% }); %>
                                </tbody>
                            </table>
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Fechar</button>
                        </div>
                    </div>
                </div>
            </div>
        <% } %>
    <% } %>
<% } %>

<!-- CSS para Impressão -->
<style>
@media print {
    .no-print {
        display: none !important;
    }
    
    .print-only {
        display: inline !important;
    }
    
    body * {
        visibility: hidden;
    }
    
    .container, .container * {
        visibility: visible;
    }
    
    .container {
        position: absolute;
        left: 0;
        top: 0;
        width: 100%;
    }
    
    .badge {
        color: #000 !important;
        background-color: transparent !important;
        border: 1px solid #000 !important;
        padding: 2px 6px;
    }
    
    .table {
        font-size: 12px;
    }
    
    .card {
        border: 1px solid #000;
        page-break-inside: avoid;
        margin-bottom: 10px;
    }
    
    .modal {
        display: none !important;
    }
}

.print-only {
    display: none;
}

/* Melhorias visuais */
.table th {
    background-color: #6c757d;
    color: white;
    border-color: #6c757d;
}

.card {
    box-shadow: 0 0.125rem 0.25rem rgba(0, 0, 0, 0.075);
    border: 1px solid rgba(0, 0, 0, 0.125);
}

.badge {
    font-size: 0.75em;
}

.modal-lg {
    max-width: 800px;
}

/* Responsividade */
@media (max-width: 768px) {
    .card-title {
        font-size: 0.875rem;
    }
    
    .card h2 {
        font-size: 1.25rem;
    }
    
    .table-responsive {
        font-size: 0.875rem;
    }
    
    .btn-sm {
        padding: 0.125rem 0.25rem;
        font-size: 0.75rem;
    }
}

/* Animações */
.card:hover {
    transform: translateY(-2px);
    transition: transform 0.2s ease-in-out;
    box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.15);
}

.table tbody tr:hover {
    background-color: rgba(0, 123, 255, 0.075);
}

/* Loading state */
.btn-loading {
    position: relative;
    color: transparent;
}

.btn-loading::after {
    content: "";
    position: absolute;
    width: 16px;
    height: 16px;
    margin: auto;
    border: 2px solid transparent;
    border-top-color: #ffffff;
    border-radius: 50%;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    animation: spin 1s linear infinite;
}

@keyframes spin {
    0% { transform: rotate(0deg); }
    100% { transform: rotate(360deg); }
}
</style>

<!-- JavaScript -->
<script src="https://cdn.sheetjs.com/xlsx-0.20.2/package/dist/xlsx.full.min.js"></script>
<script>
document.addEventListener("DOMContentLoaded", function() {
    // Exportar para Excel
    document.getElementById("btnExportarExcel").addEventListener("click", function() {
        try {
            // Mostrar estado de loading
            this.classList.add('btn-loading');
            this.disabled = true;
            
            // Clona a tabela para remoção da coluna de ações
            const tabela = document.getElementById("tabelaDoacoes").cloneNode(true);
            
            // Remove a última coluna (Ações)
            tabela.querySelectorAll("th:last-child, td:last-child").forEach(cell => cell.remove());
            
            // Gera o Excel
            const wb = XLSX.utils.table_to_book(tabela);
            const fileName = `relatorio-doacoes-${new Date().toISOString().split('T')[0]}.xlsx`;
            XLSX.writeFile(wb, fileName);
            
            // Remove estado de loading
            setTimeout(() => {
                this.classList.remove('btn-loading');
                this.disabled = false;
            }, 1000);
        } catch (error) {
            console.error('Erro ao exportar:', error);
            alert('Erro ao exportar para Excel. Tente novamente.');
            this.classList.remove('btn-loading');
            this.disabled = false;
        }
    });
    
    // Melhorar acessibilidade dos modais
    document.querySelectorAll('[data-bs-toggle="modal"]').forEach(button => {
        button.addEventListener('click', function() {
            const modalId = this.getAttribute('data-bs-target');
            const modal = document.querySelector(modalId);
            if (modal) {
                const modalTitle = modal.querySelector('.modal-title');
                if (modalTitle) {
                    // Focar no título do modal quando abrir
                    setTimeout(() => {
                        modalTitle.focus();
                    }, 150);
                }
            }
        });
    });
    
    // Validação de dados antes da renderização
    function validateData() {
        <% if (typeof lista !== 'undefined' && lista) { %>
            console.log('Dados carregados:', {
                totalDoacoes: <%= totalDoacoes %>,
                valorTotal: <%= valorTotal %>,
                doacoes: <%= JSON.stringify(lista.map(d => ({
                    id: d.doacaoId,
                    doador: d.doadorNome,
                    valor: d.doacaoValor,
                    itens: d.itens ? d.itens.length : 0
                }))) %>
            });
        <% } %>
    }
    
    validateData();
});

// Função para imprimir apenas a tabela
function printTable() {
    const printContents = document.querySelector('.container').innerHTML;
    const originalContents = document.body.innerHTML;
    
    document.body.innerHTML = printContents;
    window.print();
    document.body.innerHTML = originalContents;
    
    // Recarregar a página para restaurar os event listeners
    location.reload();
}

// Função para exportar dados em JSON (para debug)
function exportJSON() {
    <% if (typeof lista !== 'undefined' && lista) { %>
        const data = {
            doacoes: <%= JSON.stringify(lista) %>,
            resumo: {
                total: <%= totalDoacoes %>,
                valorTotal: <%= valorTotal %>
            }
        };
        
        const blob = new Blob([JSON.stringify(data, null, 2)], { type: 'application/json' });
        const url = URL.createObjectURL(blob);
        const a = document.createElement('a');
        a.href = url;
        a.download = `dados-doacoes-${new Date().toISOString().split('T')[0]}.json`;
        document.body.appendChild(a);
        a.click();
        document.body.removeChild(a);
        URL.revokeObjectURL(url);
    <% } %>
}

// Adicionar evento de debug (pode ser removido em produção)
document.addEventListener('keydown', function(e) {
    if (e.ctrlKey && e.shiftKey && e.key === 'D') {
        exportJSON();
    }
});
</script>